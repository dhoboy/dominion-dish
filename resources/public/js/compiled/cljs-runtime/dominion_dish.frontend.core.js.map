{"version":3,"sources":["dominion_dish/frontend/core.cljs"],"mappings":";AASA,wCAAA,xCAAMA;AAAN,AACE,GAAMC;AAAN,AACE,gHAAA,zGAACC;;AADH;;;AAGF,yCAAA,zCAAuBC;AAAvB,AACE,AAACC;;AACD,IAAMC,UAAQ,wBAAA,xBAAiBC;AAA/B,AACE,AAACC,sCAA+BF;;AAChC,wDAAA,jDAACG,oIAAaC,wDAAeJ;;AAEjC,mCAAA,nCAAMK;AAAN,AACE,4BAAA,mFAAA,/GAACC;;AACD,AAACC;;AACD,AAACZ;;AACD,OAACG","names":["dominion-dish.frontend.core/dev-setup","dominion-dish.frontend.config/debug?","cljs.core.println","dominion-dish.frontend.core/mount-root","re-frame.core/clear-subscription-cache!","root-el","js/document","reagent.dom/unmount-component-at-node","reagent.dom.render","dominion-dish.frontend.components.app/container","dominion-dish.frontend.core/init","re-frame.core/dispatch-sync","dominion-dish.frontend.routes/start!"],"sourcesContent":["(ns dominion-dish.frontend.core\n  (:require\n   [reagent.dom :as rdom]\n   [re-frame.core :as re-frame]\n   [dominion-dish.frontend.events :as events]\n   [dominion-dish.frontend.routes :as routes]\n   [dominion-dish.frontend.components.app :as app]\n   [dominion-dish.frontend.config :as config]))\n\n(defn dev-setup []\n  (when config/debug?\n    (println \"dev mode\")))\n\n(defn ^:dev/after-load mount-root []\n  (re-frame/clear-subscription-cache!)\n  (let [root-el (.getElementById js/document \"app\")]\n    (rdom/unmount-component-at-node root-el)\n    (rdom/render [app/container] root-el)))\n\n(defn init []\n  (re-frame/dispatch-sync [::events/initialize-db])\n  (routes/start!)\n  (dev-setup)\n  (mount-root))\n"]}