{"version":3,"sources":["dominion_dish/components/loader.cljs"],"mappings":";AAWA;;;;yCAAA,iDAAAA,1FAAMI;AAAN,AAAA,IAAAH,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;cAAA,AAAAE,4CAAAF,eAAA,rEAGWI;YAHX,AAAAF,4CAAAF,eAAA,nEAGmBK;eAHnB,AAAAH,4CAAAF,eAAA,tEAGyBM;oBAHzB,AAAAJ,4CAAAF,eAAA,3EAGkCO;AAHlC,AAAA,0FAAA,mDAAA,2CAAA,wDAIgBA,sBACb,8DAAA,mFAAA,kEAAA,mFAAA,6FAAA,4DAAA,mFAAA,mDAAA,mBAAA,tlBACE,qDAAA,rDAACC,6CAAEJ,sVACH,mDAAA,nDAACI,6CAAEH,sKACGC","names":["p__35945","map__35946","cljs.core/--destructure-map","cljs.core.get","dominion-dish.components.loader/loader","loading","error","contents","wrapper-class","cljs.core._EQ_"],"sourcesContent":["(ns dominion-dish.components.loader)\n\n;; make a loader a component in this ns\n;; make an error in this ns too\n;; error boundary in this ns?\n\n;; do a loader where the different\n;; sports ball icons move in and out!\n\n;; maybe call this component-loader\n;; or wrapper\n(defn loader\n  \"Component that takes loading, error, and children\n   props and renders accordingly\"\n  [{:keys [loading error contents wrapper-class]}]\n  [:div {:class wrapper-class}\n   (cond \n     (= loading true) [:div.loader [:i.fas.fa-spinner]]\n     (= error true)   [:div \"Error...\"]\n     :else contents)])\n\n;; (loader/loader\n;;      {:loading loading\n;;       :error false\n;;       :children [:div.post-list\n;;                  (map\n;;                   #(post-preview (assoc % :post-type post-type))\n;;                   (:items posts))\n;;                  [:div#post-list-get-more]]})))\n\n;; [:div.post-list\n;;       (cond\n;;         (= loading true) (loader/loader)\n;;         :else [:<>\n;;                 (map\n;;                   #(post-preview (assoc % :post-type post-type))\n;;                   (:items posts))\n;;              [:div#post-list-get-more]])]))\n\n;; (defn loader\n;;   \"Figuring out a loader for this\"\n;;   []\n;;   [:div.loader [:i.fas.fa-spinner]])\n\n"]}