{"version":3,"sources":["dominion_dish/utils.cljs"],"mappings":";AAGA;;;qCAAA,rCAAMA,kFAEHC;AAFH,AAGE,IAAMC,WAAS,oCAAA,pCAAkB,KAAAC,6BAAgBF;AAAjD,AACE,IAAAG,mBACE,AAACC,oBAAS,AAAe,AAAQH;AADnC,AAAA,oBAAAE;AAAAA;;AAAA;;;AAIJ;;;sCAAA,tCAAME,oFAEHC;AAFH,AAGE,qBAAA,IAAA,lBAAWA;;AAEb;;;sCAAA,tCAAMC;AAAN,AAGE,2CAAA,gBAAIC,AACC,gCAAA,hDACAC,pCACAJ;;AAEP;;;;iCAAA,jCAAMK,0EAGHC;AAHH,AAIE,YAAAC,KAAUD;;AAEZ,6BAAA,oFAAA,UAAA,WAAA,QAAA,QAAA,MAAA,OAAA,OAAA,SAAA,YAAA,UAAA,WAAA,pNAAKE;AAIL;;;;kCAAA,lCAAMC,4EAGHH;AAHH,AAIE,IAAMI,WAAS,AAACL,+BAAWC;IACrBK,OAAK,AAAcD;IACnBE,QAAM,AAACC,4CAAIL,2BAAO,AAAWE;IAC7BI,MAAI,AAAUJ;AAHpB,AAIE,2DAAA,qDAAA,5DAAKE,uDAAUE,sDAASH;;AAE5B;;;;wCAAA,gDAAAI,xFAAMG;AAAN,AAAA,IAAAF,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;oBAAA,AAAAH,4CAAAG,eAAA,3EAGWG;gBAHX,AAAAN,4CAAAG,eAAA,vEAGyBI;AAHzB,AAIE,oDAAA,WAAAC,iBAAAC,zEAACC;AAAD,AACG,QAAG,AAAClB,+BAAW,AAAA,6FAAAgB,qBACZ,AAAChB,+BAAW,AAAA,6FAAAiB;GAChB,AAACE,iDACC,AAACC,+CACCN,cACAC","names":["dominion-dish.utils/strip-off-html","s","document","js/DOMParser","or__4212__auto__","clojure.string/trim","dominion-dish.utils/scroll-page-top","elem","dominion-dish.utils/scroll-body-top","js/document","cljs.core/first","dominion-dish.utils/build-date","date-str","js/Date","dominion-dish.utils/months","dominion-dish.utils/format-date","date-obj","year","month","cljs.core.get","day","p__41059","map__41060","cljs.core/--destructure-map","dominion-dish.utils/add-items-to-list","current-items","new-items","p1__41057#","p2__41058#","cljs.core.sort","cljs.core.distinct","cljs.core.concat"],"sourcesContent":["(ns dominion-dish.utils\n  (:require [clojure.string :as str]))\n\n(defn strip-off-html\n  \"util for stripping html off of post content\"\n  [s]\n  (let [document (.parseFromString (js/DOMParser.) s \"text/html\")]  \n    (or \n      (str/trim (.-textContent (.-body document)))\n      \"\")))\n\n(defn scroll-page-top\n  \"Util for scrolling passed in elem to top of page\"\n  [elem]\n  (.scrollTo elem 0 0))\n\n(defn scroll-body-top\n  \"Util for scrolling body to top of page\"\n  []\n  (-> js/document\n       (.getElementsByClassName \"body\")\n       first\n       scroll-page-top))\n\n(defn build-date\n  \"Given a datestring like '2021-08-25T02:14:00-07:00',\n   builds a date that can be compared against\"\n  [date-str]\n  (js/Date. date-str))\n\n(def months [\"January\" \"February\" \"March\" \"April\" \"May\" \n             \"June\" \"July\" \"August\" \"September\" \"October\" \n             \"November\" \"December\"])\n\n(defn format-date\n  \"Given a datestring like '2021-08-25T02:14:00-07:00',\n  returns that date formatted in a more human-friendly way\"\n  [date-str]\n  (let [date-obj (build-date date-str)\n        year (.getFullYear date-obj)\n        month (get months (.getMonth date-obj))\n        day (.getDate date-obj)]\n    (str month \" \" day \", \" year)))\n\n(defn add-items-to-list\n  \"takes an existing items list and adds new items, de-dupded;\n   optionally sorts by published date\"\n  [{:keys [current-items new-items]}]\n  (sort\n    #(> (build-date (:published %1))\n        (build-date (:published %2)))\n    (distinct\n      (concat\n        current-items\n        new-items))))\n    \n"]}